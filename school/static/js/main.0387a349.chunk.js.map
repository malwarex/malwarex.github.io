{"version":3,"sources":["types.d.ts","utils/array.ts","utils/number.ts","pages/math/generator.ts","static/gif/ouecka.gif","static/gif/prsthore.gif","static/gif/medvedik.gif","static/gif/pes.gif","static/gif/trajapsi.gif","static/gif/pingu.gif","static/gif/opica.gif","static/gif/lenochod.gif","static/gif/mimoni.gif","static/gif/minecraft.gif","static/gif/minecraft2.gif","static/gif/mrbean.gif","static/gif/bb8.gif","static/gif/sponbob.gif","components/AppVersion.tsx","pages/layout/Navbar.tsx","pages/layout/CommonLayout.tsx","pages/math/MathComponent.tsx","components/SuccessComponent.tsx","pages/math/MathDefinitionsContext.tsx","components/SubmitButton.tsx","components/Headline1.tsx","hooks/useStickyState.ts","pages/math/MathContainer.tsx","pages/math/settings/MathSettingsContext.tsx","pages/math/settings/useMathSettings.ts","pages/math/useMathDefinitions.ts","components/SettingsWrapperComponent.tsx","pages/math/settings/MathSettingsContainer.tsx","pages/words/settings/WordsSettingsContext.tsx","pages/words/settings/useWordsSettings.ts","pages/words/wordsStore.tsx","pages/words/useWords.ts","pages/words/UserInputBox.tsx","pages/words/WordItem.tsx","pages/words/WordsContainer.tsx","pages/words/utils.ts","pages/words/settings/WordsSettingsContainer.tsx","App.tsx","index.tsx"],"names":["SettingsWritePosition","SettingsOperation","MathOperator","MathGeneratorInputField","PLUS","MINUS","FIRST","SECOND","RESULT","randomFromArray","arr","random","length","sortDesc","sort","a","b","shuffle","Math","randomNumber","maxNumber","floor","generateItem","operator","num1","num2","nums","result","eval","item","first","second","isValid","filledValue","hash","hashSum","generateData","config","numberOfItems","inputFieldFn","operatorFn","outputMap","secureBreakLoop","Object","keys","numItem","inputField","values","AppVersion","className","version","Navbar","to","path","CommonLayout","children","Symbol","Field","props","name","setFilledValue","expectedValue","statusClasses","classNames","String","inputValue","type","id","style","maxWidth","value","onChange","target","Number","Row","position","MathComponent","data","map","index","giphs","ouecka","require","default","prsthore","medvedik","pes","trajapsi","pingu","opica","lenochod","mimoni","minecraft","minecraft2","mrbean","bb8","sponbob","gifsKeys","SuccessComponent","wrapper","React","randomGif","ref","src","alt","mathInitialState","items","allOk","MathDefinitionsContext","createContext","MathDefinitionsProvider","useState","state","setState","Provider","SubmitButton","onClick","disabled","classes","btn","Headline1","useStickyState","key","defaultValue","stickyValue","window","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","timeoutId","settingsInitialState","writePosition","RANDOM","operationType","MathSettingsContext","settings","setSettings","MathSettingsProvider","useMathSettings","useContext","MathContainer","addItems","newItems","generatedItem","number","prevState","reduce","currItem","validatedFilledValue","replace","currentState","shuffleItems","s","validateResults","tempValidCounter","validatedItems","reset","useMathDefinitions","onValidateResults","clearTimeout","setTimeout","firstFailedElement","document","querySelector","scrollToPosition","documentElement","scrollTop","getBoundingClientRect","top","scrollTo","focus","select","regenerateFigure","SettingsWrapperComponent","MathSettingsContainer","useForm","defaultValues","register","handleSubmit","history","useHistory","onSubmit","prev","push","verticalAlign","valueAsNumber","num","autoEdit","autoSwitchToNext","WordsSettingsContext","WordsSettingsProvider","useWordsSettings","wordsInitialState","words","definitions","selectedWordId","selectedDefinitionId","filledDefinitions","failedWordsWithDefinition","isEvaluated","WordsContext","actions","regularDefinition","RegExp","wordsMap","definitionsMap","forEach","appWordItem","rawText","text","displayText","replaceAll","definitionIds","Array","from","matchAll","matchItem","definitionItem","wordId","charAt","expected","filled","status","crateAppItemsFromJson","rawItems","allItems","allDefinitions","WordsProvider","passedWordIds","setPassedWordIds","resolveRelevantWordsSubsetFn","allValidWords","allValidDefinitions","numberPerPage","resetPassedWordIdsFn","targetWords","targetDefinitions","word","includes","definitionId","firstDefinitionInfo","resolveRelevantWordsSubsetFactory","setSelectedDefinition","definition","fillDefinition","nextWordId","nextDefinitionId","Set","evaluate","definitionsList","newDefinitions","passedIds","loadNextWords","useWords","UserInputBox","onBoxClick","isActive","inputBoxClasses","useMemo","inputBoxText","WordItem","itemDefinitions","useCallback","charComponents","split","char","charCodeAt","charDefinition","find","option","paddingLeft","paddingRight","WordsContainer","numberOfErrors","numberOfChars","filledDefinitionCount","failedDefinitionCount","c","missingDefinitionCount","isEvaluatedAndAllIsOk","button","scroll","behavior","WordsSettingsContainer","App","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0387a349.chunk.js","sourcesContent":["export enum SettingsWritePosition {\n  RANDOM = \"random\",\n  FIRST = \"first\",\n  SECOND = \"second\",\n  RESULT = \"result\",\n}\n\nexport enum SettingsOperation {\n  PLUS = \"+\",\n  MINUS = \"-\",\n  RANDOM = \"random\",\n}\n\nexport interface MathSettingsState {\n  maxNumber: number\n  numberOfItems: number\n  writePosition: SettingsWritePosition\n  operationType: SettingsOperation\n}\n\nexport type MathSettingsContextType = {\n  settings: MathSettingsState\n  setSettings: React.Dispatch<React.SetStateAction<MathSettingsState>>\n}\n\nexport enum MathOperator {\n  PLUS = SettingsOperation.PLUS,\n  MINUS = SettingsOperation.MINUS,\n}\n\nenum MathGeneratorInputField {\n  FIRST = SettingsWritePosition.FIRST,\n  SECOND = SettingsWritePosition.SECOND,\n  RESULT = SettingsWritePosition.RESULT,\n}\n\nexport interface MathGeneratedItem {\n  hash: string\n  first: number\n  second: number\n  result: number\n  operator: OperatorType\n  isValid: MathFormItemValidStatus\n  filledValue: null | number\n  inputField?: MathGeneratorInputField\n  setFilledValue?: (number: number) => void\n}\n\nexport type MathGeneratedItems = Array<MathGeneratedItem>\n\nexport interface MathDefinitionState {\n  items: MathGeneratedItems\n  allOk: boolean\n}\n\nexport interface MathDefinitionStateWithCallbacks extends MathDefinitionState {\n  addItems: (MathGeneratorConfig) => void\n  shuffleItems: () => void\n  validateResults: () => void\n  reset: () => void\n}\n\nexport type MathContextType = [\n  MathDefinitionState,\n  React.Dispatch<React.SetStateAction<MathDefinitionState>>\n]\nexport interface MathGeneratorConfig {\n  numberOfItems: number\n  maxNumber: number\n  inputFieldFn: () => MathGeneratorInputField\n  operatorFn: () => MathOperator\n}\n","import random from 'lodash.random';\n\nexport function randomFromArray<T>(arr: Array<T> = []): T {\n  return arr[random(0, arr.length - 1)];\n  // return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport const generateItems = (number: number = 10): Array<number> => \n  Array.from(Array(10).keys());\n\nexport const sortAsc = (arr: Array<number> = []) => arr.sort((a, b) => a - b);\n\nexport const sortDesc = (arr: Array<number> = []) => arr.sort((a, b) => b - a);\n\nexport const shuffle = (arr: Array<any>) => arr.sort(() => Math.random() - 0.5);\n","export function randomNumber(maxNumber: number) {\n  if (maxNumber === 0) {\n    return maxNumber\n  }\n  return Math.floor(Math.random() * maxNumber) + 1\n}\n","/* eslint-disable no-eval, import/prefer-default-export */\n\nimport hashSum from \"hash-sum\"\n\nimport { randomNumber } from \"../../utils/number\"\nimport { sortDesc, shuffle } from \"../../utils/array\"\n\nimport {\n  MathOperator,\n  MathGeneratedItem,\n  MathGeneratedItems,\n  MathGeneratorConfig,\n} from \"../../types.d\"\n\nfunction generateItem(\n  maxNumber: number,\n  operator: MathOperator\n): MathGeneratedItem {\n  const num1: number = randomNumber(maxNumber)\n  const num2: number = randomNumber(maxNumber - num1)\n  const nums: Array<number> =\n    operator === MathOperator.MINUS\n      ? sortDesc([num1, num2])\n      : shuffle([num1, num2])\n  const result = eval(`${nums[0]}${operator}${nums[1]}`)\n\n  const item = {\n    first: nums[0],\n    second: nums[1],\n    operator,\n    result,\n    isValid: null,\n    filledValue: null,\n  }\n\n  return {\n    ...item,\n    hash: hashSum(item),\n  }\n}\n\nexport function generateData(config: MathGeneratorConfig): MathGeneratedItems {\n  const { numberOfItems = 5, maxNumber = 10, inputFieldFn, operatorFn } = config\n  const outputMap: { [propName: string]: MathGeneratedItem } = {}\n\n  let secureBreakLoop = 0\n\n  // fill maximum possible items\n  while (Object.keys(outputMap).length < numberOfItems) {\n    if (secureBreakLoop >= maxNumber * 100) break\n\n    const numItem = generateItem(maxNumber, operatorFn())\n\n    outputMap[numItem.hash] = {\n      ...numItem,\n      inputField: inputFieldFn(),\n    }\n\n    secureBreakLoop += 1\n  }\n\n  return Object.values(outputMap)\n}\n","export default __webpack_public_path__ + \"static/media/ouecka.b7381a1e.gif\";","export default __webpack_public_path__ + \"static/media/prsthore.f7ca3b05.gif\";","export default __webpack_public_path__ + \"static/media/medvedik.784ea499.gif\";","export default __webpack_public_path__ + \"static/media/pes.ef796995.gif\";","export default __webpack_public_path__ + \"static/media/trajapsi.df30f6bd.gif\";","export default __webpack_public_path__ + \"static/media/pingu.3d6e16d4.gif\";","export default __webpack_public_path__ + \"static/media/opica.21d576e5.gif\";","export default __webpack_public_path__ + \"static/media/lenochod.5dc18bf9.gif\";","export default __webpack_public_path__ + \"static/media/mimoni.a040de34.gif\";","export default __webpack_public_path__ + \"static/media/minecraft.ba39868a.gif\";","export default __webpack_public_path__ + \"static/media/minecraft2.2799b35f.gif\";","export default __webpack_public_path__ + \"static/media/mrbean.3a49a444.gif\";","export default __webpack_public_path__ + \"static/media/bb8.bbc79674.gif\";","export default __webpack_public_path__ + \"static/media/sponbob.85e5e96b.gif\";","import { version } from '../../package.json';\n\nexport function AppVersion() {\n  // eslint-disable-next-line react/jsx-one-expression-per-line\n  return <span className=\"app-version\">v{version}</span>;\n}\n","import { NavLink, Switch, Route } from 'react-router-dom';\nimport { AppVersion } from '../../components/AppVersion';\n\nexport function Navbar() {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div>\n        <AppVersion />\n      </div>\n\n      <div className=\"navbar-nav ml-auto d-flex flex-row\">\n        <NavLink className=\"nav-link mr-2\" to=\"/words\">\n          SjL\n        </NavLink>\n\n        <NavLink className=\"nav-link\" to=\"/math\">\n          Mat\n          </NavLink>\n      </div>\n\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item active\">\n          <Switch>\n            <Route path=\"/math\">\n              <NavLink className=\"nav-link\" to=\"/math/settings\">\n                Nastavenia\n              </NavLink>\n            </Route>\n            <Route path=\"/words\">\n              <NavLink className=\"nav-link\" to=\"/words/settings\">\n                Nastavenia\n              </NavLink>\n            </Route>\n          </Switch>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import { ReactNode } from 'react';\nimport { Navbar } from './Navbar';\n\ntype Props = {\n  children: ReactNode\n};\n\nexport function CommonLayout({ children }: Props) {\n  return (\n    <>\n      <Navbar />\n      <div className=\"d-flex justify-content-center text-center\">{children}</div>\n      <div className=\"mb-5\" />\n    </>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport { MathGeneratedItems, MathGeneratedItem } from '../../types.d';\n\n\nconst Symbol: React.FC = ({ children }) => {\n  return <strong>{children}</strong>;\n}\ninterface FieldProps extends MathGeneratedItem {\n  name: string\n}\n\nfunction Field(props: FieldProps) {\n\n  const { hash, name, inputField, filledValue, setFilledValue, isValid } = props;\n\n  // @ts-ignore\n  const expectedValue = props[props.name];\n\n  const statusClasses = classNames({\n    'success-bg': String(isValid) === 'true',\n    'failure-bg': String(isValid) === 'false'\n  });\n\n  // @ts-ignore\n  if (name !== inputField) {\n    return expectedValue;\n  }\n\n  let inputValue = filledValue;\n  let fallbackInputValue: string = ''\n\n  return (\n    <input\n      type=\"number\"\n      className={statusClasses}\n      id={hash}\n      // maxLength={String(expectedValue).length}\n      // type=\"number\"\n      // className=\"form-control\"\n      style={{ maxWidth: 100 }}\n      value={inputValue !== null ? inputValue : fallbackInputValue}\n      // @ts-ignore\n      onChange={({ target: { value } }) => setFilledValue(Number(value))}\n    />\n  );\n}\n\ntype RowProps = {\n  item: MathGeneratedItem,\n  position: number\n};\n\nfunction Row(props: RowProps) {\n  const { item, position } = props;\n\n  return (\n    <tr key={item.hash}>\n      <td>{position})</td>\n      <td>\n        <Field name=\"first\" {...item} />\n      </td>\n      <td>\n        <Symbol>{item.operator}</Symbol>\n      </td>\n      <td>\n        <Field name=\"second\" {...item} />\n      </td>\n      <td>\n        <Symbol> = </Symbol>\n      </td>\n      <td>\n        <Field name=\"result\" {...item} />\n      </td>\n    </tr>\n  );\n}\n\ntype Props = {\n  data: MathGeneratedItems\n};\n\nexport function MathComponent(props: Props) {\n  const { data = [] } = props;\n\n  return (\n    <>\n      {data.length > 0 && (\n        <table className=\"table figures\">\n          <tbody>\n            {data &&\n              // @ts-ignore\n              data.map((item, index) => <Row key={item.hash} item={item} position={index + 1} />)}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","/* eslint-disable global-require */\nimport * as React from 'react';\nimport { randomFromArray } from '../utils/array';\n\nconst giphs = {\n  ouecka: require('./../static/gif/ouecka.gif').default,\n  prsthore: require('./../static/gif/prsthore.gif').default,\n  medvedik: require('./../static/gif/medvedik.gif').default,\n  pes: require('./../static/gif/pes.gif').default,\n  trajapsi: require('./../static/gif/trajapsi.gif').default,\n  pingu: require('./../static/gif/pingu.gif').default,\n  opica: require('./../static/gif/opica.gif').default,\n  lenochod: require('./../static/gif/lenochod.gif').default,\n  mimoni: require('./../static/gif/mimoni.gif').default,\n  minecraft: require('./../static/gif/minecraft.gif').default,\n  minecraft2: require('./../static/gif/minecraft2.gif').default,\n  mrbean: require('./../static/gif/mrbean.gif').default,\n  bb8: require('./../static/gif/bb8.gif').default,\n  sponbob: require('./../static/gif/sponbob.gif').default\n} as const;\n\nconst gifsKeys = (Object.keys(giphs) as (keyof typeof giphs)[]);\n\nexport function SuccessComponent() {\n  const wrapper = React.useRef(null);\n\n  const randomGif = randomFromArray(gifsKeys);\n\n  return (\n    <div ref={wrapper} className=\"giphy-container\">\n      <div className=\"layer\" />\n      <img src={giphs[randomGif]} alt={randomGif} className=\"img-fluid\" />\n      {/* <div dangerouslySetInnerHTML={{ __html: randomFromArray(giphys) }} /> */}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { MathContextType, MathDefinitionState } from '../../types.d';\n\nexport const mathInitialState: MathDefinitionState = {\n  items: [],\n  allOk: false\n};\n\nconst MathDefinitionsContext = React.createContext<MathContextType>([mathInitialState, () => {}]);\n\nconst MathDefinitionsProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState(mathInitialState);\n\n  return (\n    <MathDefinitionsContext.Provider value={[state, setState]}>\n      {children}\n    </MathDefinitionsContext.Provider>\n  );\n};\n\nexport { MathDefinitionsContext, MathDefinitionsProvider };\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes } from 'react';\n\ntype Props = {\n  children: React.ReactNode,\n  onClick?: () => void\n  disabled?: boolean\n  type?: ButtonHTMLAttributes<\"button\">[\"type\"]\n};\n\nexport function SubmitButton(props: Props) {\n  const { children, onClick, disabled = false, type = \"button\" } = props;\n\n  const classes = classNames({\n    btn: true,\n    'btn-block': true,\n    'btn-lg': true,\n    'btn-outline-primary': disabled === false,\n    'btn-outline-secondary': disabled === true,\n  })\n\n  return (\n    <button\n      className={classes}\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n}\n","interface Props {\n  children: React.ReactNode\n}\n\nexport function Headline1(props: Props) {\n  const { children } = props;\n\n  return <h1 className=\"headline1\">{children}</h1>;\n}\n","import React from \"react\"\n\nexport function useStickyState<T>(key: string, defaultValue: T) {\n  const [value, setValue] = React.useState(() => {\n    const stickyValue = window.localStorage.getItem(key)\n    return (stickyValue !== null ? JSON.parse(stickyValue) : defaultValue) as T\n  })\n\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue] as const\n}\n","import * as React from 'react';\n\nimport { MathComponent } from './MathComponent';\nimport { SuccessComponent } from '../../components/SuccessComponent';\nimport { useMathDefinitions } from './useMathDefinitions';\nimport { randomFromArray } from '../../utils/array';\nimport { SubmitButton } from '../../components/SubmitButton';\nimport { Headline1 } from '../../components/Headline1';\nimport { useMathSettings } from './settings/useMathSettings';\n\nimport { SettingsOperation } from '../../types.d';\n\nlet timeoutId: number;\n\nfunction scrollToFirstFailedInput() {\n  if (timeoutId) clearTimeout(timeoutId);\n  timeoutId = window.setTimeout(() => {\n    const firstFailedElement = (document.querySelector('#math input.failure-bg') as HTMLInputElement)\n    if (!firstFailedElement) return;\n\n    const documentTop = document.documentElement.scrollTop;\n    const failureElementTop = firstFailedElement.getBoundingClientRect().top;\n    const scrollToPosition = documentTop + failureElementTop - 12;\n    window.scrollTo(0, scrollToPosition);\n\n    firstFailedElement.focus();\n    firstFailedElement.select();\n  }, 100);\n}\n\nexport function MathContainer() {\n\n  const { settings } = useMathSettings()\n  const { maxNumber, numberOfItems, writePosition, operationType } = settings\n  const { items, allOk, addItems, shuffleItems, validateResults, reset } = useMathDefinitions();\n\n  // @ts-ignore\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onValidateResults = React.useCallback(() => {\n    validateResults();\n    scrollToFirstFailedInput();\n  });\n\n  function regenerateFigure() {\n    const inputFieldFn =\n      writePosition === 'random'\n        ? () => randomFromArray(['result', 'first', 'second'])\n        : () => writePosition;\n\n    const operatorFn = operationType === SettingsOperation.RANDOM\n      ? () => randomFromArray([SettingsOperation.PLUS, SettingsOperation.MINUS])\n      : () => operationType;\n\n    reset();\n\n    addItems({\n      numberOfItems,\n      maxNumber,\n      operatorFn,\n      inputFieldFn\n    });\n\n    shuffleItems();\n  }\n\n  React.useEffect(() => {\n    regenerateFigure();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div id=\"math\" className=\"mb-5\">\n      <Headline1>\n        Príklady\n        <button className=\"btn btn-link\" type=\"button\" onClick={() => regenerateFigure()}>\n          (nové)\n        </button>\n      </Headline1>\n      {!allOk ? (\n        <>\n          <MathComponent data={items} />\n          <SubmitButton onClick={() => onValidateResults()}>HOTOVO</SubmitButton>\n        </>\n      ) : (\n        <SuccessComponent />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useStickyState } from '../../../hooks/useStickyState';\n\nimport {\n  SettingsOperation,\n  MathSettingsState,\n  SettingsWritePosition,\n  MathSettingsContextType,\n} from '../../../types.d';\n\n\nexport const settingsInitialState: MathSettingsState = {\n  maxNumber: 100,\n  numberOfItems: 5,\n  writePosition: SettingsWritePosition.RANDOM,\n  operationType: SettingsOperation.RANDOM,\n};\n\nconst MathSettingsContext = React.createContext<MathSettingsContextType>({\n  settings: settingsInitialState,\n  setSettings: () => undefined\n});\n\nconst MathSettingsProvider: React.FC = ({ children }) => {\n  const [state, setState] = useStickyState('mathSettings', settingsInitialState);\n\n  return (\n    <MathSettingsContext.Provider value={{ settings: state, setSettings: setState }} >\n      { children}\n    </MathSettingsContext.Provider >\n  );\n};\n\nexport { MathSettingsContext, MathSettingsProvider };\n","import { useContext } from \"react\"\nimport { MathSettingsContext } from \"./MathSettingsContext\"\n\nexport function useMathSettings() {\n  return useContext(MathSettingsContext)\n}\n","import { useContext } from \"react\"\n\nimport {\n  MathDefinitionsContext,\n  mathInitialState,\n} from \"./MathDefinitionsContext\"\nimport { shuffle } from \"../../utils/array\"\nimport { generateData } from \"./generator\"\nimport { MathDefinitionStateWithCallbacks } from \"../../types\"\nimport { MathGeneratorConfig } from \"../../types.d\"\n\nexport function useMathDefinitions(): MathDefinitionStateWithCallbacks {\n  const [state, setState] = useContext(MathDefinitionsContext)\n\n  function validateResults() {\n    setState((prevState) => {\n      let tempValidCounter = 0\n      const validatedItems = prevState.items.map((item: any) => {\n        const isValid = item[item.inputField] === item.filledValue\n\n        if (isValid) {\n          tempValidCounter += 1\n        }\n\n        return {\n          ...item,\n          isValid,\n        }\n      })\n\n      return {\n        ...prevState,\n        items: validatedItems,\n        allOk: tempValidCounter === validatedItems.length,\n      }\n    })\n  }\n\n  function addItems(config: MathGeneratorConfig) {\n    const generatedItems = generateData(config)\n\n    // const newItems: Array<MathFormItemWithSetter> = generatedItems.map(generatedItem => ({\n    const newItems = generatedItems.map((generatedItem) => ({\n      ...generatedItem,\n\n      setFilledValue: (number: number) => {\n        setState((prevState) => ({\n          ...prevState,\n          items: prevState.items.reduce((result: any, currItem: any) => {\n            // not matched item\n            if (generatedItem.hash !== currItem.hash) {\n              return [...result, currItem]\n            }\n\n            const validatedFilledValue = String(number).replace(\n              /[^\\d,.]+/gi,\n              \"\"\n            )\n            const filledValue =\n              String(validatedFilledValue).length > 0\n                ? Number(validatedFilledValue)\n                : null\n\n            // item to update\n            return [\n              ...result,\n              {\n                ...currItem,\n                filledValue,\n              },\n            ]\n          }, []),\n        }))\n      },\n    }))\n\n    setState((currentState) => ({\n      ...currentState,\n      items: [...currentState.items, ...newItems],\n    }))\n  }\n\n  function shuffleItems() {\n    setState((s: any) => ({\n      ...s,\n      items: shuffle(s.items),\n    }))\n  }\n\n  function reset() {\n    setState(mathInitialState)\n  }\n\n  return {\n    items: state.items || [],\n    allOk: state.allOk,\n    addItems,\n    shuffleItems,\n    validateResults,\n    reset,\n  }\n}\n","import { ReactNode } from 'react'\nimport { Headline1 } from './Headline1'\n\ntype Props = {\n  children: ReactNode\n}\n\nexport function SettingsWrapperComponent({ children }: Props) {\n  return (\n    <div id=\"settings\">\n      <Headline1>Nastavenia</Headline1>\n      {children}\n    </div>\n  )\n}","import { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMathSettings } from \"./useMathSettings\";\nimport { SubmitButton } from '../../../components/SubmitButton';\nimport { SettingsOperation, SettingsWritePosition } from '../../../types.d';\nimport { SettingsWrapperComponent } from \"../../../components/SettingsWrapperComponent\";\n\n\nexport function MathSettingsContainer() {\n  const { settings, setSettings } = useMathSettings()\n  const { register, handleSubmit } = useForm({\n    defaultValues: settings\n  });\n\n  const history = useHistory();\n\n  const onSubmit = (values: Partial<typeof settings>) => {\n    setSettings((prev) => ({ ...prev, ...values, }))\n    history.push('/math')\n  }\n\n  return (\n    <SettingsWrapperComponent>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <td style={{ verticalAlign: 'middle' }}>Maximálne číslo</td>\n              <td>\n                <select className=\"form-control\" {...register('maxNumber', { valueAsNumber: true })} >\n                  {[10, 15, 20, 30, 40, 50, 60, 70, 80, 90, 100].map((num: number) => (\n                    <option key={`key-${num}`}>{num}</option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td style={{ verticalAlign: 'middle' }}>Počet príkladov</td>\n              <td>\n                <select className=\"form-control\" {...register('numberOfItems', { valueAsNumber: true })} >\n                  {[1, 2, 3, 4, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50].map((num: number) => (\n                    <option key={`key-${num}`}>{num}</option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td style={{ verticalAlign: 'middle' }}>Pozícia pre vpisovanie</td>\n              <td>\n                <select className=\"form-control\" {...register('writePosition')} >\n                  <option value={SettingsWritePosition.FIRST}>Prvé číslo</option>\n                  <option value={SettingsWritePosition.SECOND}>Druhé číslo</option>\n                  <option value={SettingsWritePosition.RESULT}>Výsledok</option>\n                  <option value={SettingsWritePosition.RANDOM}>Náhodne</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td style={{ verticalAlign: 'middle' }}>Operácia</td>\n              <td>\n                <select className=\"form-control\" {...register('operationType')} >\n                  <option value={SettingsOperation.PLUS}>Sčítanie (+)</option>\n                  <option value={SettingsOperation.MINUS}>Odčítanie (-)</option>\n                  <option value={SettingsOperation.RANDOM}>Náhodne</option>\n                </select>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <SubmitButton type=\"submit\">ULOŽIŤ</SubmitButton>\n      </form>\n    </SettingsWrapperComponent>\n  );\n}\n","import * as React from \"react\"\nimport { useStickyState } from \"../../../hooks/useStickyState\"\n\ninterface SettingsState {\n  numberOfItems: number\n  autoEdit: \"yes\" | \"no\"\n  autoSwitchToNext: \"yes\" | \"no\"\n}\n\ninterface SettingsContextType {\n  settings: SettingsState\n  setSettings: React.Dispatch<React.SetStateAction<SettingsState>>\n}\n\nexport const settingsInitialState: SettingsState = {\n  numberOfItems: 5,\n  autoEdit: \"yes\",\n  autoSwitchToNext: \"yes\",\n}\n\nconst WordsSettingsContext = React.createContext<SettingsContextType>({\n  settings: settingsInitialState,\n  setSettings: () => undefined,\n})\n\nconst WordsSettingsProvider: React.FC = ({ children }) => {\n  const [state, setState] = useStickyState(\n    \"wordsSettings\",\n    settingsInitialState,\n  )\n\n  return (\n    <WordsSettingsContext.Provider\n      value={{ settings: state, setSettings: setState }}\n    >\n      {children}\n    </WordsSettingsContext.Provider>\n  )\n}\n\nexport { WordsSettingsContext, WordsSettingsProvider }\n","import { useContext } from \"react\"\nimport { WordsSettingsContext } from \"./WordsSettingsContext\"\n\nexport function useWordsSettings() {\n  return useContext(WordsSettingsContext)\n}\n","import React, { useEffect, useState, ReactNode } from \"react\"\nimport hashSum from \"hash-sum\"\n\nimport { items as rawItems } from \"./words.json\"\nimport { useStickyState } from \"../../hooks/useStickyState\"\nimport { useWordsSettings } from \"./settings/useWordsSettings\"\n\ninterface JsonWordItem {\n  text: string\n}\n\nexport interface AppWordItemDefinition {\n  id: string\n  wordId: AppWordItem[\"id\"]\n  charAt: number\n  expected: string\n  filled: string\n  status: \"ok\" | \"ko\" | \"\"\n}\n\nexport interface AppWordItem {\n  id: string\n  rawText: string\n  displayText: string\n  definitionIds: AppWordItemDefinition[\"id\"][]\n}\n\ntype WordsMap = Record<AppWordItem[\"id\"], AppWordItem>\ntype DefinitionsMap = Record<AppWordItemDefinition[\"id\"], AppWordItemDefinition>\n\ninterface WordsContextType {\n  state: WordsState\n  actions: WordsActions\n}\n\ninterface WordsState {\n  // current words subset\n  words: AppWordItem[]\n  // definitions map\n  definitions: DefinitionsMap\n  // selected word\n  selectedWordId: AppWordItem[\"id\"] | \"\"\n  // selected definition\n  selectedDefinitionId: AppWordItemDefinition[\"id\"] | \"\"\n  // which definitions are filled\n  filledDefinitions: AppWordItemDefinition[\"id\"][]\n  // mapped object with failed words -> definitions\n  failedWordsWithDefinition: Record<\n    AppWordItem[\"id\"],\n    AppWordItemDefinition[\"id\"][]\n  >\n  // evaulate button was pushed\n  isEvaluated: boolean\n}\n\ninterface WordsActions {\n  setSelectedDefinition: (definintion: AppWordItemDefinition) => void\n  fillDefinition: (\n    definitionId: AppWordItemDefinition[\"id\"],\n    value: string,\n  ) => void\n  evaluate: () => void\n  loadNextWords: () => void\n}\n\nconst wordsInitialState: WordsState = {\n  words: [],\n  definitions: {},\n  selectedWordId: \"\",\n  selectedDefinitionId: \"\",\n  filledDefinitions: [],\n  failedWordsWithDefinition: {},\n  isEvaluated: false,\n}\n\nconst WordsContext = React.createContext<WordsContextType>({\n  state: wordsInitialState,\n  actions: {} as WordsActions,\n})\n\nfunction crateAppItemsFromJson(items: JsonWordItem[]) {\n  const regularDefinition = new RegExp(\"[iíyý](?![aeiyouáéíýóú])\", \"g\")\n\n  const wordsMap: WordsMap = {}\n  const definitionsMap: DefinitionsMap = {}\n\n  items.forEach((item, index) => {\n    const appWordItem: AppWordItem = {\n      id: \"<temp>\",\n      rawText: item.text,\n      displayText: item.text.replaceAll(regularDefinition, \"_\"),\n      definitionIds: [],\n    }\n    appWordItem.id = hashSum({ appWordItem, index })\n\n    Array.from(item.text.matchAll(regularDefinition)).forEach((matchItem) => {\n      const definitionItem: AppWordItemDefinition = {\n        id: \"<temp>\",\n        wordId: appWordItem.id,\n        charAt: matchItem.index || -1,\n        expected: matchItem[0],\n        filled: \"\",\n        status: \"\",\n      }\n\n      definitionItem.id = hashSum(definitionItem)\n\n      // add to local word\n      appWordItem.definitionIds.push(definitionItem.id)\n      // add to global var\n      definitionsMap[definitionItem.id] = definitionItem\n    })\n\n    wordsMap[appWordItem.id] = appWordItem\n  })\n\n  return {\n    wordsMap,\n    definitionsMap,\n  }\n}\n\nfunction resolveRelevantWordsSubsetFactory(\n  allValidWords: WordsMap,\n  allValidDefinitions: DefinitionsMap,\n  passedWordIds: string[],\n  numberPerPage: number,\n  resetPassedWordIdsFn: () => void,\n) {\n  return function resolve() {\n    if (Object.keys(allValidWords).length <= passedWordIds.length) {\n      resetPassedWordIdsFn()\n      passedWordIds = []\n    }\n\n    const targetWords: AppWordItem[] = []\n    const targetDefinitions: DefinitionsMap = {}\n\n    const suffledWordItems = Object.values(allValidWords).sort(\n      () => Math.random() - 0.5,\n    )\n\n    suffledWordItems.forEach((word) => {\n      if (targetWords.length === numberPerPage) return\n      if (passedWordIds.includes(word.id)) return\n\n      targetWords.push(word)\n      word.definitionIds.forEach((definitionId) => {\n        targetDefinitions[definitionId] = allValidDefinitions[definitionId]\n      })\n    })\n\n    const firstDefinitionInfo = {\n      wordId: targetWords[0].id,\n      id: targetWords[0].definitionIds[0],\n    }\n\n    return {\n      targetWords,\n      targetDefinitions,\n      firstDefinitionInfo,\n    }\n  }\n}\n\nconst { wordsMap: allItems, definitionsMap: allDefinitions } =\n  crateAppItemsFromJson(rawItems)\n\nfunction WordsProvider({ children }: { children: ReactNode }) {\n  const { settings } = useWordsSettings()\n  // sticky state\n  const [passedWordIds, setPassedWordIds] = useStickyState<string[]>(\n    \"passedWords\",\n    [],\n  )\n\n  // prepared callback\n  const resolveRelevantWordsSubsetFn = resolveRelevantWordsSubsetFactory(\n    allItems,\n    allDefinitions,\n    passedWordIds,\n    settings.numberOfItems,\n    () => setPassedWordIds([]),\n  )\n\n  // words main state\n  const [state, setState] = useState(wordsInitialState)\n\n  useEffect(() => {\n    const { targetWords, targetDefinitions, firstDefinitionInfo } =\n      resolveRelevantWordsSubsetFn()\n\n    let selectedWordId = firstDefinitionInfo.wordId\n    let selectedDefinitionId = firstDefinitionInfo.id\n\n    if (settings.autoEdit === \"no\") {\n      selectedWordId = \"\"\n      selectedDefinitionId = \"\"\n    }\n\n    setState(() => ({\n      ...wordsInitialState,\n      words: targetWords,\n      definitions: targetDefinitions,\n      selectedWordId,\n      selectedDefinitionId,\n    }))\n  }, [JSON.stringify(settings)]) // eslint-disable-line\n\n  const actions: WordsActions = {\n    setSelectedDefinition(definition) {\n      setState((prev) => {\n        return {\n          ...prev,\n          selectedWordId: definition.wordId,\n          selectedDefinitionId: definition.id,\n        }\n      })\n    },\n\n    fillDefinition(definitionId: AppWordItemDefinition[\"id\"], value: string) {\n      setState((prev) => {\n        let nextWordId: AppWordItem[\"id\"] = \"\"\n        let nextDefinitionId: AppWordItemDefinition[\"id\"] = \"\"\n\n        if (settings.autoSwitchToNext === \"yes\") {\n          prev.words.forEach((word) => {\n            if (nextWordId) return\n\n            word.definitionIds.forEach((definition) => {\n              if (nextDefinitionId) return\n\n              if (\n                definition !== definitionId &&\n                prev.definitions[definition].filled === \"\"\n              ) {\n                nextWordId = word.id\n                nextDefinitionId = definition\n              }\n            })\n          })\n        }\n\n        const nextState: WordsState = {\n          ...prev,\n          definitions: {\n            ...prev.definitions,\n            [definitionId]: {\n              ...prev.definitions[definitionId],\n              filled: value,\n              status: \"\",\n            },\n          },\n          filledDefinitions: Array.from(\n            new Set([...prev.filledDefinitions, definitionId]),\n          ),\n          selectedWordId: nextWordId,\n          selectedDefinitionId: nextDefinitionId,\n        }\n\n        return nextState\n      })\n    },\n\n    evaluate() {\n      const failedWordsWithDefinition: Record<\n        AppWordItem[\"id\"],\n        AppWordItemDefinition[\"id\"][]\n      > = {}\n\n      const definitionsList = Object.values(state.definitions)\n      const newDefinitions: DefinitionsMap = {}\n\n      definitionsList.forEach((definition) => {\n        const isSuccess = definition.expected === definition.filled\n        if (!isSuccess) {\n          definition.status = \"ko\"\n\n          failedWordsWithDefinition[definition.wordId] = [\n            ...(failedWordsWithDefinition[definition.wordId] || []),\n            definition.id,\n          ]\n        } else {\n          definition.status = \"ok\"\n        }\n\n        newDefinitions[definition.id] = { ...definition }\n      })\n\n      if (Object.keys(failedWordsWithDefinition).length === 0) {\n        const passedIds = definitionsList.map(({ wordId }) => wordId)\n        setPassedWordIds((prev) => Array.from(new Set([...prev, ...passedIds])))\n      }\n\n      setState((prev) => ({\n        ...prev,\n        definitions: newDefinitions,\n        failedWordsWithDefinition,\n        isEvaluated: true,\n      }))\n    },\n\n    loadNextWords() {\n      const { targetWords, targetDefinitions, firstDefinitionInfo } =\n        resolveRelevantWordsSubsetFn()\n\n      setState({\n        ...wordsInitialState,\n        words: targetWords,\n        definitions: targetDefinitions,\n        selectedWordId: firstDefinitionInfo.wordId,\n        selectedDefinitionId: firstDefinitionInfo.id,\n      })\n    },\n  }\n\n  return (\n    <WordsContext.Provider value={{ state, actions }}>\n      {children}\n    </WordsContext.Provider>\n  )\n}\n\nexport { WordsContext, WordsProvider }\n","import { useContext } from \"react\"\nimport { WordsContext } from \"./wordsStore\"\n\nexport function useWords() {\n  return useContext(WordsContext)\n}\n","import classNames from \"classnames\"\nimport { useMemo } from \"react\"\nimport { AppWordItemDefinition } from \"./wordsStore\"\n\ninterface Props {\n  isActive: boolean\n  definition: AppWordItemDefinition\n  onBoxClick: () => void\n}\n\nexport function UserInputBox({ definition, onBoxClick, isActive }: Props) {\n  const inputBoxClasses = useMemo(\n    () =>\n      classNames({\n        \"input-box\": true,\n        \"input-box--active\": isActive,\n        \"input-box--filled\": definition.filled,\n        \"input-box--success\": definition.status === \"ok\",\n        \"input-box--failed\": definition.status === \"ko\",\n      }),\n    [isActive, definition.filled, definition.status],\n  )\n\n  const inputBoxText = useMemo(\n    () => definition.filled || \"?\",\n    [definition.filled],\n  )\n\n  return (\n    <div className=\"d-flex input-wrapper\">\n      <span onClick={() => onBoxClick()} className={inputBoxClasses}>\n        {inputBoxText}\n      </span>\n    </div>\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useMemo, useCallback } from \"react\"\nimport { useWords } from \"./useWords\"\nimport { UserInputBox } from \"./UserInputBox\"\nimport { AppWordItem, AppWordItemDefinition } from \"./wordsStore\"\n\ninterface Props {\n  item: AppWordItem\n}\n\nexport function WordItem({ item }: Props) {\n  const { state, actions } = useWords()\n  const { selectedWordId, selectedDefinitionId, definitions } = state\n\n  const itemDefinitions = item.definitionIds.map(\n    (definitionId) => definitions[definitionId],\n  )\n\n  const onBoxClick = useCallback((definition: AppWordItemDefinition) => {\n    actions.setSelectedDefinition(definition)\n  }, [])\n\n  const charComponents = useMemo(() => {\n    return item.displayText.split(\"\").map((char, index) => {\n      if (char !== \"_\") {\n        return (\n          <span\n            className={`char char-${char.charCodeAt(0)}`}\n            key={`${item.id}-${index}`}\n          >\n            {char}\n          </span>\n        )\n      }\n\n      const charDefinition = itemDefinitions.find(\n        ({ charAt }) => charAt === index,\n      )\n\n      if (!charDefinition) return null\n\n      return (\n        <UserInputBox\n          isActive={charDefinition.id === selectedDefinitionId}\n          key={`${item.id}-${index}}-${JSON.stringify(charDefinition)}`}\n          definition={charDefinition}\n          onBoxClick={() => onBoxClick(charDefinition)}\n        />\n      )\n    })\n  }, [JSON.stringify(itemDefinitions), selectedWordId, selectedDefinitionId])\n\n  return (\n    <div id={`word-${item.id}`}>\n      <div className={`d-flex justify-content-center word-item`}>\n        {charComponents}\n      </div>\n      {item.id === selectedWordId && (\n        <div className=\"input-options mb-4\">\n          <div className=\"btn-group btn-group-lg\">\n            {[\"i\", \"í\", \"y\", \"ý\"].map((option) => (\n              <button\n                key={option}\n                type=\"button\"\n                className=\"btn btn-outline-secondary\"\n                style={{ paddingLeft: \"1.5rem\", paddingRight: \"1.5rem\" }}\n                onClick={() =>\n                  actions.fillDefinition(selectedDefinitionId, option)\n                }\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","import { useEffect } from \"react\"\nimport { Headline1 } from \"../../components/Headline1\"\nimport { SubmitButton } from \"../../components/SubmitButton\"\nimport { SuccessComponent } from \"../../components/SuccessComponent\"\nimport { useWords } from \"./useWords\"\nimport {\n  resolveRightWordingForChar,\n  resolveRightWordingForNumberOfErrors,\n} from \"./utils\"\nimport { WordItem } from \"./WordItem\"\n\nexport function WordsContainer() {\n  const { state, actions } = useWords()\n\n  const {\n    isEvaluated,\n    words,\n    definitions,\n    filledDefinitions,\n    failedWordsWithDefinition,\n  } = state\n\n  const definitionsList = Object.values(definitions)\n\n  // filled\n  const filledDefinitionCount = filledDefinitions.length\n  // FAILED\n  const failedDefinitionCount = Object.values(failedWordsWithDefinition).reduce(\n    (c, arr) => (c += arr.length),\n    0,\n  )\n  // missing\n  const missingDefinitionCount = definitionsList.length - filledDefinitionCount\n\n  const isEvaluatedAndAllIsOk = isEvaluated && failedDefinitionCount === 0\n\n  useEffect(() => {\n    if (!isEvaluatedAndAllIsOk) return\n\n    setTimeout(() => {\n      const button = document.querySelector(\".giphy-container img\")\n\n      if (!button) return\n\n      window.scroll({\n        top: button.getBoundingClientRect().top,\n        behavior: \"smooth\",\n      })\n    }, 150)\n  }, [isEvaluatedAndAllIsOk])\n\n  return (\n    <div id=\"words\">\n      <Headline1>Doplňovačka</Headline1>\n\n      {words.map((item) => (\n        <WordItem key={item.id} item={item} />\n      ))}\n\n      <div className=\"my-4\">\n        {missingDefinitionCount > 0 && (\n          <p>\n            Ostáva vyplniť{\" \"}\n            <strong>\n              {resolveRightWordingForChar(missingDefinitionCount)}\n            </strong>\n            .\n          </p>\n        )}\n\n        {isEvaluated && failedDefinitionCount > 0 && (\n          <p className=\"text-danger\">\n            Máš{\" \"}\n            <strong>\n              {resolveRightWordingForNumberOfErrors(failedDefinitionCount)}\n            </strong>\n            .\n          </p>\n        )}\n\n        {isEvaluatedAndAllIsOk ? (\n          <>\n            <button\n              id=\"load-next-words\"\n              type=\"button\"\n              className=\"btn btn-link\"\n              onClick={() => actions.loadNextWords()}\n            >\n              Načítaj ďalšie slová\n            </button>\n\n            <div className=\"my-3\">\n              <SuccessComponent />\n            </div>\n          </>\n        ) : (\n          <SubmitButton\n            onClick={() => actions.evaluate()}\n            disabled={missingDefinitionCount > 0}\n          >\n            Vyhodnotiť\n          </SubmitButton>\n        )}\n      </div>\n    </div>\n  )\n}\n","export function resolveRightWordingForChar(numberOfChars: number) {\n  if (numberOfChars === 1) {\n    return \"1 písmeno\" as const\n  } else if (numberOfChars > 1 && numberOfChars < 5) {\n    return `${numberOfChars} písmena` as const\n  } else {\n    return `${numberOfChars} písmen` as const\n  }\n}\n\nexport function resolveRightWordingForInWord(numberOfWords: number) {\n  if (numberOfWords === 1) return \"1 slove\" as const\n\n  return `${numberOfWords} slovách`\n}\n\nexport function resolveRightWordingForNumberOfErrors(numberOfErrors: number) {\n  if (numberOfErrors === 1) {\n    return \"1 chybu\" as const\n  } else if (numberOfErrors > 1 && numberOfErrors < 5) {\n    return `${numberOfErrors} chyby` as const\n  } else {\n    return `${numberOfErrors} chýb` as const\n  }\n}\n","import { useForm } from \"react-hook-form\"\nimport { useHistory } from \"react-router-dom\"\nimport { useWordsSettings } from \"./useWordsSettings\"\nimport { SubmitButton } from \"../../../components/SubmitButton\"\nimport { SettingsWrapperComponent } from \"../../../components/SettingsWrapperComponent\"\n\nexport function WordsSettingsContainer() {\n  const { settings, setSettings } = useWordsSettings()\n  const { register, handleSubmit } = useForm({\n    defaultValues: settings,\n  })\n\n  const history = useHistory()\n\n  const onSubmit = (values: Partial<typeof settings>) => {\n    setSettings((prev) => ({ ...prev, ...values }))\n    history.push(\"/words\")\n  }\n\n  return (\n    <SettingsWrapperComponent>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <td style={{ verticalAlign: \"middle\" }}>Počet slov</td>\n              <td>\n                <select\n                  className=\"form-control\"\n                  {...register(\"numberOfItems\", { valueAsNumber: true })}\n                >\n                  {[1, 2, 5, 10, 15, 20, 30, 40, 50, 75, 100].map(\n                    (num: number) => (\n                      <option key={`key-${num}`}>{num}</option>\n                    ),\n                  )}\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td style={{ verticalAlign: \"middle\" }}>\n                Auto-editovanie <br />\n                po otvorení\n              </td>\n              <td>\n                <select className=\"form-control\" {...register(\"autoEdit\")}>\n                  <option value={\"yes\"}>áno</option>\n                  <option value={\"no\"}>nie</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td style={{ verticalAlign: \"middle\" }}>\n                Auto-preskočenie <br />\n                na ďaľšie nevyplnené <br />\n                písmeno\n              </td>\n              <td>\n                <select\n                  className=\"form-control\"\n                  {...register(\"autoSwitchToNext\")}\n                >\n                  <option value={\"yes\"}>áno</option>\n                  <option value={\"no\"}>nie</option>\n                </select>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <SubmitButton type=\"submit\">ULOŽIŤ</SubmitButton>\n      </form>\n    </SettingsWrapperComponent>\n  )\n}\n","import { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport './styles/bootstrap/bootstrap.scss';\nimport './styles/app.scss';\n\nimport { CommonLayout } from './pages/layout/CommonLayout';\nimport { MathContainer } from './pages/math/MathContainer';\nimport { MathSettingsContainer } from './pages/math/settings/MathSettingsContainer';\nimport { MathDefinitionsProvider } from './pages/math/MathDefinitionsContext';\nimport { MathSettingsProvider } from './pages/math/settings/MathSettingsContext';\nimport { WordsContainer } from './pages/words/WordsContainer';\nimport { WordsSettingsContainer } from './pages/words/settings/WordsSettingsContainer';\nimport { WordsProvider } from './pages/words/wordsStore';\nimport { WordsSettingsProvider } from './pages/words/settings/WordsSettingsContext';\n\nexport function App() {\n  return (\n    <Router>\n      <CommonLayout>\n        <Switch>\n          {/* MATH */}\n          <Route path=\"/math\">\n            <MathSettingsProvider>\n              <Route path=\"/math/settings\" exact>\n                <MathSettingsContainer />\n              </Route>\n              <Route path=\"/math\" exact>\n                <MathDefinitionsProvider>\n                  <MathContainer />\n                </MathDefinitionsProvider>\n              </Route>\n            </MathSettingsProvider>\n          </Route>\n          {/* WORDS */}\n          <Route path=\"/words\">\n            <WordsSettingsProvider>\n              <Route path=\"/words/settings\" exact>\n                <WordsSettingsContainer />\n              </Route>\n              <WordsProvider>\n                <Route path=\"/words\" exact>\n                  <WordsContainer />\n                </Route>\n              </WordsProvider>\n            </WordsSettingsProvider>\n          </Route>\n          {/* FALLBACK */}\n          <Redirect to=\"/words\" />\n        </Switch>\n      </CommonLayout>\n    </Router>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}